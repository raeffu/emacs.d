(require 'github-browse-file)
(require 'multiple-cursors)

(setq github-browse-file-show-line-at-point t)
(setq tab-width 2)

(global-set-key (kbd "C-c m e") 'mc/edit-lines)

(global-set-key (kbd "C-c m n") 'mc/mark-next-like-this)
(global-set-key (kbd "C-c m p") 'mc/mark-previous-like-this)
(global-set-key (kbd "C-c m a") 'mc/mark-all-like-this)

(defun custom-c-mode-hook ()
  (define-key c-mode-base-map "\M-a" 'helm-M-x)
  (define-key c-mode-base-map (kbd "M-j") 'backward-char)
  (define-key c-mode-base-map (kbd "M-l") 'forward-char)
  (define-key c-mode-base-map (kbd "M-i") 'previous-line)
  (define-key c-mode-base-map (kbd "M-I") 'scroll-down)
  (define-key c-mode-base-map (kbd "M-k") 'next-line)
  (define-key c-mode-base-map (kbd "M-K") 'scroll-up)
  (define-key c-mode-base-map (kbd "M-L") 'end-of-line)
  (define-key c-mode-base-map (kbd "M-J") 'beginning-of-line)
  (define-key c-mode-base-map (kbd "M-u") 'backward-word)
  (define-key c-mode-base-map (kbd "M-o") 'forward-word)
  (define-key c-mode-base-map (kbd "M-U") 'backward-paragraph)
  (define-key c-mode-base-map (kbd "M-O") 'forward-paragraph)
  (define-key c-mode-base-map (kbd "M-C-o") 'forward-paragraph)
  (define-key c-mode-base-map (kbd "M-C-u") 'backward-paragraph)
  (define-key c-mode-base-map (kbd "M-b") 'pop-to-mark-command)
  (define-key c-mode-base-map (kbd "M-d") 'delete-backward-char)
  (define-key c-mode-base-map (kbd "M-f") 'delete-char)
  (define-key c-mode-base-map (kbd "M-D") 'backward-kill-word)
  (define-key c-mode-base-map (kbd "M-F") 'kill-word)
  (define-key c-mode-base-map (kbd "<delete>") 'delete-char)
  (define-key c-mode-base-map (kbd "M-h") 'beginning-of-buffer)
  (define-key c-mode-base-map (kbd "M-H") 'end-of-buffer)
  (define-key c-mode-base-map (kbd "M-0") 'delete-window)
  (define-key c-mode-base-map (kbd "M-2") 'split-window-vertically)
  (define-key c-mode-base-map (kbd "M-3") 'split-window-horizontally)
  (define-key c-mode-base-map (kbd "M-4") 'balance-windows)
  (define-key c-mode-base-map (kbd "M-9") 'delete-other-windows)
  (define-key c-mode-base-map (kbd "M-8") 'delete-other-windows-vertically)
  (define-key c-mode-base-map (kbd "M-+") 'balance-windows)
  (define-key c-mode-base-map (kbd "M-1") 'zoom-window-zoom)
  (define-key c-mode-base-map (kbd "M-q") 'shell-command)
  (define-key c-mode-base-map (kbd "C-d") 'windmove-right)
  (define-key c-mode-base-map (kbd "C-s") 'windmove-down)
  (define-key c-mode-base-map (kbd "C-a") 'windmove-left)
  (define-key c-mode-base-map (kbd "C-w") 'windmove-up)
  (define-key c-mode-base-map (kbd "M-z") 'undo)
  (define-key c-mode-base-map (kbd "M-SPC") 'set-mark-command)
  (define-key c-mode-base-map (kbd "M-x") 'kill-region)
  (define-key c-mode-base-map (kbd "M-c") 'kill-ring-save)
  (define-key c-mode-base-map (kbd "M-v") 'yank)
  (define-key c-mode-base-map (kbd "M-V") 'yank-pop)
  (define-key c-mode-base-map (kbd "C-r d") 'kill-rectangle)
  (define-key c-mode-base-map (kbd "M-r") 'replace-string)
  (define-key c-mode-base-map (kbd "C-c i") 't-indent-buffer)
  (define-key c-mode-base-map (kbd "C-x C-b") 'ibuffer)
  (define-key c-mode-base-map (kbd "C-c k") 'kill-compilation)
  (define-key c-mode-base-map (kbd "C-c w") 'delete-trailing-whitespace)
  (define-key c-mode-base-map (kbd "C-f") 'isearch-forward-regexp)
  (define-key c-mode-base-map (kbd "C-*") 'isearch-forward-at-point)
  (define-key c-mode-base-map (kbd "C-c r") 'revert-buffer)
  (define-key c-mode-base-map (kbd "C-c u") 't-move-text-up)
  (define-key c-mode-base-map (kbd "C-c n") 't-move-text-down)
  (define-key c-mode-base-map (kbd "C-M-l")  'textmate-shift-right)
  (define-key c-mode-base-map (kbd "C-M-j")  'textmate-shift-left)
  (define-key c-mode-base-map (kbd "C-c C-w") 'whitespace-mode)
  (define-key c-mode-base-map (kbd "M-t") 'projectile-find-file)
  (define-key c-mode-base-map (kbd "C-c c") 'org-capture)
  (define-key c-mode-base-map (kbd "C-x M-r") 'ruby-compilation-this-buffer)
  (define-key c-mode-base-map (kbd "C-x M-k") 'kill-this-buffer)
  (define-key c-mode-base-map (kbd "C-x t") 'dired-other-window)
  (define-key c-mode-base-map (kbd "M-RET") 't-newline-and-indent)
  (define-key c-mode-base-map (kbd "C-c C-c") 't-duplicate-current-line-or-region)
  (define-key c-mode-base-map (kbd "C-h e") 'lisp-find-map)
  (define-key c-mode-base-map (kbd "C-h e c") 'finder-commentary)
  (define-key c-mode-base-map (kbd "C-h e e") 'view-echo-area-messages)
  (define-key c-mode-base-map (kbd "C-h e f") 'find-function)
  (define-key c-mode-base-map (kbd "C-h e v") 'find-variable)
  (define-key c-mode-base-map (kbd "C-h e F") 'find-face-definition)
  (define-key c-mode-base-map (kbd "C-h e i") 'info-apropos)
  (define-key c-mode-base-map (kbd "C-h e k") 'find-function-on-key)
  (define-key c-mode-base-map (kbd "C-h e l") 'find-library)
  (define-key c-mode-base-map (kbd "C-c e") 'lisp-eval-map)
  (define-key c-mode-base-map (kbd "C-c e b") 'eval-buffer)
  (define-key c-mode-base-map (kbd "C-c e r") 'eval-region)
  (define-key c-mode-base-map (kbd "C-c e l") 'eval-last-sexp)
  (define-key c-mode-base-map (kbd "C-x p") 't-project-ido-find-project)
  (define-key c-mode-base-map (kbd "C-c C-k") 't-comment-or-uncomment-region-or-line)
  (define-key c-mode-base-map (kbd "C-p s") 'persp-switch)
  (define-key c-mode-base-map (kbd "C-p p") 't-persp-last)
  (define-key c-mode-base-map (kbd "C-p e") 't-emacs-conf-persp)
  (define-key c-mode-base-map (kbd "C-p o") 't-org-persp)
  (define-key c-mode-base-map (kbd "C-p d") 'persp-kill)
  (define-key c-mode-base-map (kbd "C-p x") 'persp-kill)
  (define-key c-mode-base-map (kbd "C-_") 'company-complete)
  (define-key c-mode-base-map (kbd "C-x b") 'ido-switch-buffer)
  (define-key c-mode-base-map (kbd "C-x C-b") 'ibuffer)
  (define-key c-mode-base-map (kbd "M-q") 't-shell-command)
  (define-key c-mode-base-map (kbd "C-c M-d") 't-delete-current-buffer-file)
  (define-key c-mode-base-map (kbd "M->") 'next-buffer)
  (define-key c-mode-base-map (kbd "M-<") 'previous-buffer)
  (define-key c-mode-base-map (kbd "C-x r M-i") 'string-insert-rectangle)
  (define-key c-mode-base-map (kbd "M-e") 'testing-map)
  (define-key c-mode-base-map (kbd "M-e e") 'tester-run-test-file)
  (define-key c-mode-base-map (kbd "M-e s") 'tester-run-test-suite)
  (define-key c-mode-base-map (kbd "M-a") 'helm-M-x)
  (define-key c-mode-base-map (kbd "C-x C-m") 'helm-M-x)
  (define-key c-mode-base-map (kbd "M-R") 'helm-show-kill-ring)
  (define-key c-mode-base-map (kbd "C-x b") 'helm-mini)
  (define-key c-mode-base-map (kbd "C-x C-b") 'helm-buffers-list)
  (define-key c-mode-base-map (kbd "C-x C-f") 'helm-find-files)
  (define-key c-mode-base-map (kbd "C-h f") 'helm-apropos)
  (define-key c-mode-base-map (kbd "C-h r") 'helm-info-emacs)
  (define-key c-mode-base-map (kbd "C-h C-l") 'helm-locate-library)
  (define-key c-mode-base-map (kbd "C-h C-b") 'helm-descbinds)
  (define-key c-mode-base-map (kbd "M-w") 'helm-imenu)
  (define-key c-mode-base-map (kbd "C-o") 'helm-find-files)
  (define-key c-mode-base-map (kbd "M-g a") 'helm-do-ag)
  (define-key c-mode-base-map (kbd "C-c h") 'helm-command-prefix)
  (define-key c-mode-base-map (kbd "C-x g") 'magit-status)
  (define-key c-mode-base-map (kbd "C-x M-g") 'magit-dispatch-popup)
  (define-key c-mode-base-map (kbd "C-x M-l") 'magit-log)
  (define-key c-mode-base-map (kbd "C-x M-b") 'magit-blame)
  )

(add-hook 'c-initialization-hook 'custom-c-mode-hook)

(provide 'programming-prt)
